{"version":3,"sources":["components/Header.js","components/Data.js","components/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["Header","id","className","Component","Data","props","scrollToBottom","end","current","scrollIntoView","behavior","state","loading","streamerName","createdAt","broadcasterType","profileImageUrl","totalViewers","followers","videoList","videoData","React","createRef","fetch","this","streamer","then","res","json","result","setState","alert","fetchData","prevProps","ref","src","alt","map","data","i","thumbnail_url","replace","title","published_at","slice","split","reverse","join","view_count","href","url","target","rel","ResponsiveContainer","width","aspect","LineChart","height","Line","type","dataKey","stroke","CartesianGrid","XAxis","YAxis","Tooltip","class","role","Statistics","isSubmitted","handleSubmit","bind","input","event","value","preventDefault","onSubmit","style","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35b430a1.chunk.js","sourcesContent":["// Basic\nimport React, { Component } from \"react\";\n\n// Header Component\nclass Header extends Component {\n    render() {\n        return (\n            <section id=\"header\" className=\"bg-primary\">\n                <div className=\"container\">\n                    <h1 className=\"text-center\">Twitch Data</h1>\n                    <h2 className=\"text-center\">Stats of all Twitch Users</h2>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Header;","// Basic\nimport React, { Component } from \"react\";\n\n// Components\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\n// Data Component\nclass Data extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            id: null,\n            streamerName: null,\n            createdAt: null,\n            broadcasterType: null,\n            profileImageUrl: null,\n            totalViewers: null,\n            followers: null,\n            videoList: [],\n            videoData: []\n        };\n        this.end = React.createRef();\n    }\n\n    async fetchData() {\n        await fetch(`https://javiertcs-api.herokuapp.com/api/twitch-data?${this.props.streamer}`).then(res => res.json()).then((result) => {\n            if (result) {\n                this.setState({\n                    id: result.id,\n                    streamerName: result.streamerName,\n                    createdAt: result.createdAt,\n                    broadcasterType: result.broadcasterType,\n                    profileImageUrl: result.profileImageUrl,\n                    totalViewers: result.totalViewers,\n                    followers: result.followers,\n                    videoList: result.videoList,\n                    videoData: result.videoData\n                });\n            } else {\n                alert(\"This Twitch Streamer doesn't exist, try again\");\n            }\n        })\n        this.setState({ loading: true });\n    }\n\n    scrollToBottom = () => {\n        this.end.current.scrollIntoView({ behavior: 'smooth' })\n    }\n\n    async componentDidMount() {\n        await this.fetchData();\n        await this.scrollToBottom();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.streamer !== prevProps.streamer) {\n            this.fetchData();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"pt-5\">\n                <div ref={this.end} />\n                { this.state.loading ? (\n                    <div>\n                        <h2 className=\"text-center\">Stats of {this.state.streamerName}</h2>\n                        <img src={this.state.profileImageUrl} className=\"img-fluid mx-auto d-block py-3\" alt=\"\" />\n                        <p className=\"text-center\">\n                            <span className=\"badge badge-info mx-2 my-2\">Created at: {this.state.createdAt}</span>\n                            <span className=\"badge badge-primary mx-2 my-2\">Type: {this.state.broadcasterType}</span>\n                            <span className=\"badge badge-success mx-2 my-2\">Views: {this.state.totalViewers}</span>\n                            <span className=\"badge badge-danger mx-2 my-2\">Followers: {this.state.followers}</span>\n                        </p>\n                        <h2 className=\"text-center pt-4\">Videos of {this.state.streamerName}</h2>\n                        <div className=\"card-columns pt-5\">\n                            {this.state.videoList.map((data, i) => {\n                                if (data.thumbnail_url) {\n                                    return (\n                                        <div key={'video_' + i} className=\"card\" >\n                                            <img className=\"card-img-top\" src={data.thumbnail_url.replace(\"%{width}\", \"320\").replace(\"%{height}\", \"180\")} alt=\"Test\" />\n                                            <div className=\"card-body\">\n                                                <h5 className=\"card-title text-center\">{data.title}</h5>\n                                                <p className=\"text-center\">\n                                                    <span className=\"badge badge-info mx-2 my-2\">Published at: {data.published_at.slice(0, 10).split(\"-\").reverse().join(\"-\")}</span>\n                                                    <span className=\"badge badge-success mx-2 my-2\">Views: {data.view_count}</span>\n                                                </p>\n                                                <div className=\"d-flex justify-content-center\">\n                                                    <a href={data.url} target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-primary\">See Video</a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                } else {\n                                    return null;\n                                }\n                            })}\n                        </div>\n                        <h2 className=\"text-center pt-4\">Views Data of {this.state.streamerName}</h2>\n                        <div className=\"d-flex justify-content-center pt-4\">\n                            <ResponsiveContainer width=\"90%\" aspect={3}>\n                                <LineChart width={400} height={400} data={this.state.videoData}>\n                                    <Line type=\"monotone\" dataKey=\"views\" stroke=\"#9146FF\" />\n                                    <CartesianGrid stroke=\"#ccc\" />\n                                    <XAxis dataKey=\"name\" />\n                                    <YAxis />\n                                    <Tooltip />\n                                </LineChart>\n                            </ResponsiveContainer>\n                        </div>\n                    </div>\n                ) : (\n                        <div class=\"d-flex justify-content-center\">\n                            <div class=\"spinner-border\" role=\"status\">\n                                <span class=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                    )}\n            </div >\n        );\n    }\n}\n\nexport default Data;","// Basic\nimport React, { Component } from \"react\";\n\n// Components\nimport Data from \"./Data\";\n\n// Statistics Component\nclass Statistics extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSubmitted: false,\n            streamer: \"\"\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.input = React.createRef();\n    }\n\n    handleSubmit(event) {\n        this.setState({ isSubmitted: true, streamer: this.input.current.value });\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <section id=\"statistics\" className=\"bg-secondary py-5\" >\n                <div className=\"container\">\n                    <h3 className=\"text-center\">Enter the name of the Twitch Streamer</h3>\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"form-group d-flex justify-content-center\">\n                            <input type=\"text\" className=\"form-control text-center my-4\" style={{ width: \"70%\" }} ref={this.input} placeholder=\"Enter Twitch Streamer\" />\n                        </div>\n                        <div className=\"d-flex justify-content-center\">\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                        </div>\n                    </form>\n                    {this.state.isSubmitted && <Data streamer={this.state.streamer} />}\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Statistics;","// Dependencies\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n// React\nimport React from 'react';\n\n// Other\nimport './App.css';\n\n// Components\nimport Header from \"./components/Header\";\nimport Statistics from \"./components/Statistics\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Statistics />\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}