{"version":3,"sources":["components/Header.js","components/Data.js","components/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["Header","id","className","Component","Data","props","scrollToBottom","setTimeout","end","current","scrollIntoView","behavior","state","streamerName","createdAt","broadcasterType","profileImageUrl","totalViewers","followers","videoList","videoData","React","createRef","fetch","this","streamer","then","res","json","result","setState","alert","fetchData","prevProps","src","alt","ref","map","data","i","thumbnail_url","replace","title","published_at","slice","split","reverse","join","view_count","href","url","target","rel","ResponsiveContainer","width","aspect","LineChart","height","Line","type","dataKey","stroke","CartesianGrid","XAxis","YAxis","Tooltip","Statistics","isSubmitted","handleSubmit","bind","input","event","value","preventDefault","onSubmit","style","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb60554b.chunk.js","sourcesContent":["// Basic\r\nimport React, { Component } from \"react\";\r\n\r\n// Header Component\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <section id=\"header\" className=\"bg-primary\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"text-center\">Twitch Data</h1>\r\n                    <h2 className=\"text-center\">Stats of all Twitch Users</h2>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","// Basic\r\nimport React, { Component } from \"react\";\r\n\r\n// Components\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\n// Data Component\r\nclass Data extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            streamerName: null,\r\n            createdAt: null,\r\n            broadcasterType: null,\r\n            profileImageUrl: null,\r\n            totalViewers: null,\r\n            followers: null,\r\n            videoList: [],\r\n            videoData: []\r\n        };\r\n        this.end = React.createRef();\r\n    }\r\n\r\n    fetchData() {\r\n        fetch(`https://javiertcs-api.herokuapp.com/api/twitch-data?${this.props.streamer}`).then(res => res.json()).then((result) => {\r\n            if (result) {\r\n                this.setState({\r\n                    id: result.id,\r\n                    streamerName: result.streamerName,\r\n                    createdAt: result.createdAt,\r\n                    broadcasterType: result.broadcasterType,\r\n                    profileImageUrl: result.profileImageUrl,\r\n                    totalViewers: result.totalViewers,\r\n                    followers: result.followers,\r\n                    videoList: result.videoList,\r\n                    videoData: result.videoData\r\n                });\r\n            } else {\r\n                alert(\"This Twitch Streamer doesn't exist, try again\");\r\n            }\r\n        })\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        setTimeout(() => { this.end.current.scrollIntoView({ behavior: 'smooth' }) }, 500);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.streamer !== prevProps.streamer) {\r\n            this.fetchData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pt-5\">\r\n                <h2 className=\"text-center\">Stats of {this.state.streamerName}</h2>\r\n                <img src={this.state.profileImageUrl} className=\"img-fluid mx-auto d-block py-3\" alt=\"\" />\r\n                <p className=\"text-center\">\r\n                    <span className=\"badge badge-info mx-2 my-2\">Created at: {this.state.createdAt}</span>\r\n                    <span className=\"badge badge-primary mx-2 my-2\">Type: {this.state.broadcasterType}</span>\r\n                    <span className=\"badge badge-success mx-2 my-2\">Views: {this.state.totalViewers}</span>\r\n                    <span className=\"badge badge-danger mx-2 my-2\">Followers: {this.state.followers}</span>\r\n                </p>\r\n                <div ref={this.end} />\r\n                <h2 className=\"text-center pt-4\">Videos of {this.state.streamerName}</h2>\r\n                <div className=\"card-columns pt-5\">\r\n                    {this.state.videoList.map((data, i) => {\r\n                        if (data.thumbnail_url) {\r\n                            return (\r\n                                <div key={'video_' + i} className=\"card\" >\r\n                                    <img className=\"card-img-top\" src={data.thumbnail_url.replace(\"%{width}\", \"320\").replace(\"%{height}\", \"180\")} alt=\"Test\" />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title text-center\">{data.title}</h5>\r\n                                        <p className=\"text-center\">\r\n                                            <span className=\"badge badge-info mx-2 my-2\">Published at: {data.published_at.slice(0, 10).split(\"-\").reverse().join(\"-\")}</span>\r\n                                            <span className=\"badge badge-success mx-2 my-2\">Views: {data.view_count}</span>\r\n                                        </p>\r\n                                        <div className=\"d-flex justify-content-center\">\r\n                                            <a href={data.url} target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-primary\">See Video</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    })}\r\n                </div>\r\n                <h2 className=\"text-center pt-4\">Views Data of {this.state.streamerName}</h2>\r\n                <div className=\"d-flex justify-content-center pt-4\">\r\n                    <ResponsiveContainer width=\"90%\" aspect={3}>\r\n                        <LineChart width={400} height={400} data={this.state.videoData}>\r\n                            <Line type=\"monotone\" dataKey=\"views\" stroke=\"#9146FF\" />\r\n                            <CartesianGrid stroke=\"#ccc\" />\r\n                            <XAxis dataKey=\"name\" />\r\n                            <YAxis />\r\n                            <Tooltip />\r\n                        </LineChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Data;","// Basic\r\nimport React, { Component } from \"react\";\r\n\r\n// Components\r\nimport Data from \"./Data\";\r\n\r\n// Statistics Component\r\nclass Statistics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSubmitted: false,\r\n            streamer: \"\"\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.input = React.createRef();\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.setState({ isSubmitted: true, streamer: this.input.current.value });\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"statistics\" className=\"bg-secondary py-5\" >\r\n                <div className=\"container\">\r\n                    <h3 className=\"text-center\">Enter the name of the Twitch Streamer</h3>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group d-flex justify-content-center\">\r\n                            <input type=\"text\" className=\"form-control text-center my-4\" style={{ width: \"70%\" }} ref={this.input} placeholder=\"Enter Twitch Streamer\" />\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                        </div>\r\n                    </form>\r\n                    {this.state.isSubmitted && <Data streamer={this.state.streamer} />}\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Statistics;","// Dependencies\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n// React\nimport React from 'react';\n\n// Other\nimport './App.css';\n\n// Components\nimport Header from \"./components/Header\";\nimport Statistics from \"./components/Statistics\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Statistics />\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}